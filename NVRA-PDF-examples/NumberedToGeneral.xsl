<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2017sp2

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns0="NIST_V0_voter_records_interchange.xsd" xmlns:addr="http://www.fgdc.gov/schemas/address/addr" xmlns:addr_type="http://www.fgdc.gov/schemas/address/addr_type" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="ns0 xs">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var1_initial" select="."/>
		<VoterRecordsRequest xmlns="NIST_V0_voter_records_interchange.xsd" xmlns:addr="http://www.fgdc.gov/schemas/address/addr" xmlns:addr_type="http://www.fgdc.gov/schemas/address/addr_type" xmlns:gml="http://www.opengis.net/gml" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:smil20="http://www.w3.org/2001/SMIL20/" xmlns:smil20lang="http://www.w3.org/2001/SMIL20/Language">
			<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">NIST_V0_voter_records_interchange.xsd NIST_V0_voter_records_interchange.xsd</xsl:attribute>
			<VoterRegistration>
				<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:AdditionalInfo">
					<xsl:variable name="var2_cur" select="."/>
					<AdditionalInfo>
						<xsl:copy-of select="@node()"/>
						<xsl:copy-of select="node()"/>
					</AdditionalInfo>
				</xsl:for-each>
				<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:VoterId">
					<xsl:variable name="var3_cur" select="."/>
					<VoterId>
						<xsl:for-each select="ns0:AttestNoSuchId">
							<xsl:variable name="var4_cur" select="."/>
							<AttestNoSuchId>
								<xsl:value-of select="boolean(translate(normalize-space(string(.)), ' 0false', ''))"/>
							</AttestNoSuchId>
						</xsl:for-each>
						<xsl:for-each select="ns0:DateOfIssuance">
							<xsl:variable name="var5_cur" select="."/>
							<DateOfIssuance>
								<xsl:value-of select="."/>
							</DateOfIssuance>
						</xsl:for-each>
						<xsl:for-each select="ns0:FileValue">
							<xsl:variable name="var6_cur" select="."/>
							<FileValue>
								<xsl:copy-of select="@node()"/>
								<xsl:copy-of select="node()"/>
							</FileValue>
						</xsl:for-each>
						<xsl:for-each select="ns0:OtherType">
							<xsl:variable name="var7_cur" select="."/>
							<OtherType>
								<xsl:value-of select="."/>
							</OtherType>
						</xsl:for-each>
						<xsl:for-each select="ns0:StringValue">
							<xsl:variable name="var8_cur" select="."/>
							<StringValue>
								<xsl:value-of select="."/>
							</StringValue>
						</xsl:for-each>
						<Type>
							<xsl:value-of select="ns0:Type"/>
						</Type>
					</VoterId>
				</xsl:for-each>
				<xsl:for-each select="ns0:VoterRecordsRequest">
					<xsl:variable name="var9_cur" select="."/>
					<Name>
						<xsl:copy-of select="ns0:VoterRegistration/ns0:Name/@node()"/>
						<xsl:copy-of select="ns0:VoterRegistration/ns0:Name/node()"/>
					</Name>
				</xsl:for-each>
				<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:VoterClassification">
					<xsl:variable name="var10_cur" select="."/>
					<VoterClassification>
						<xsl:copy-of select="@node()"/>
						<xsl:copy-of select="node()"/>
					</VoterClassification>
				</xsl:for-each>
				<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:Signature">
					<xsl:variable name="var11_cur" select="."/>
					<Signature>
						<xsl:copy-of select="@node()"/>
						<xsl:copy-of select="node()"/>
					</Signature>
				</xsl:for-each>
				<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:ContactMethod">
					<xsl:variable name="var12_cur" select="."/>
					<ContactMethod>
						<xsl:copy-of select="@node()"/>
						<xsl:copy-of select="node()"/>
					</ContactMethod>
				</xsl:for-each>
				<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:RegistrationWitness">
					<xsl:variable name="var13_cur" select="."/>
					<RegistrationWitness>
						<xsl:copy-of select="@node()"/>
						<xsl:copy-of select="node()"/>
					</RegistrationWitness>
				</xsl:for-each>
				<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:RegistrationAssistant">
					<xsl:variable name="var14_cur" select="."/>
					<RegistrationAssistant>
						<xsl:copy-of select="@node()"/>
						<xsl:copy-of select="node()"/>
					</RegistrationAssistant>
				</xsl:for-each>
				<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:RegistrationProxy">
					<xsl:variable name="var15_cur" select="."/>
					<RegistrationProxy>
						<xsl:copy-of select="@node()"/>
						<xsl:copy-of select="node()"/>
					</RegistrationProxy>
				</xsl:for-each>
				<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:DateOfBirth">
					<xsl:variable name="var16_cur" select="."/>
					<DateOfBirth>
						<xsl:value-of select="."/>
					</DateOfBirth>
				</xsl:for-each>
				<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:Ethnicity">
					<xsl:variable name="var17_cur" select="."/>
					<Ethnicity>
						<xsl:value-of select="."/>
					</Ethnicity>
				</xsl:for-each>
				<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:Gender">
					<xsl:variable name="var18_cur" select="."/>
					<Gender>
						<xsl:value-of select="."/>
					</Gender>
				</xsl:for-each>
				<MailingAddress>
					<GeneralAddressClass_type>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/@action">
							<xsl:variable name="var19_cur" select="."/>
							<xsl:attribute name="action" namespace="">
								<xsl:value-of select="."/>
							</xsl:attribute>
						</xsl:for-each>
						<xsl:variable name="var20_nested">
							<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type">
								<xsl:variable name="var21_cur" select="."/>
								<xsl:value-of select="number(boolean(addr:GeneralAddress))"/>
							</xsl:for-each>
						</xsl:variable>
						<xsl:variable name="var22_nested">
							<xsl:choose>
								<xsl:when test="boolean(translate(normalize-space($var20_nested), ' 0', ''))">
									<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr:GeneralAddress">
										<xsl:variable name="var23_cur" select="."/>
										<xsl:value-of select="'1'"/>
									</xsl:for-each>
								</xsl:when>
								<xsl:otherwise>
									<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type">
										<xsl:variable name="var24_cur" select="."/>
										<xsl:for-each select="addr:CompleteStreetName/addr_type:StreetNamePreDirectional">
											<xsl:variable name="var25_cur" select="."/>
											<xsl:for-each select="$var24_cur/addr:CompleteStreetName/addr_type:StreetNamePostType">
												<xsl:variable name="var26_cur" select="."/>
												<xsl:for-each select="$var24_cur/addr:CompleteStreetName/addr_type:StreetNamePostDirectional">
													<xsl:variable name="var27_cur" select="."/>
													<xsl:variable name="var28_nested">
														<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement">
															<xsl:variable name="var29_cur" select="."/>
															<xsl:value-of select="number(boolean(addr_type:SubaddressType))"/>
														</xsl:for-each>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="boolean(translate(normalize-space($var28_nested), ' 0', ''))">
															<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement/addr_type:SubaddressType">
																<xsl:variable name="var30_cur" select="."/>
																<xsl:variable name="var31_nested">
																	<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type">
																		<xsl:variable name="var32_cur" select="."/>
																		<xsl:value-of select="number(boolean(addr:CompleteSubaddress))"/>
																	</xsl:for-each>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="boolean(translate(normalize-space($var31_nested), ' 0', ''))">
																		<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement">
																			<xsl:variable name="var33_cur" select="."/>
																			<xsl:for-each select="$var24_cur/addr_type:CompletePlaceName/addr_type:PlaceName">
																				<xsl:variable name="var34_filter" select="."/>
																				<xsl:if test="(./@PlaceNameType)[('MunicipalJurisdiction' = .)]">
																					<xsl:for-each select="$var24_cur/addr_type:StateName">
																						<xsl:variable name="var35_cur" select="."/>
																						<xsl:for-each select="$var24_cur/addr_type:ZipCode">
																							<xsl:variable name="var36_cur" select="."/>
																							<xsl:value-of select="'1'"/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:if>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:for-each select="$var24_cur/addr_type:CompletePlaceName/addr_type:PlaceName">
																			<xsl:variable name="var37_filter" select="."/>
																			<xsl:if test="(./@PlaceNameType)[('MunicipalJurisdiction' = .)]">
																				<xsl:for-each select="$var24_cur/addr_type:StateName">
																					<xsl:variable name="var38_cur" select="."/>
																					<xsl:for-each select="$var24_cur/addr_type:ZipCode">
																						<xsl:variable name="var39_cur" select="."/>
																						<xsl:value-of select="'1'"/>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:if>
																		</xsl:for-each>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</xsl:when>
														<xsl:otherwise>
															<xsl:variable name="var40_nested">
																<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type">
																	<xsl:variable name="var41_cur" select="."/>
																	<xsl:value-of select="number(boolean(addr:CompleteSubaddress))"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:choose>
																<xsl:when test="boolean(translate(normalize-space($var40_nested), ' 0', ''))">
																	<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement">
																		<xsl:variable name="var42_cur" select="."/>
																		<xsl:for-each select="$var24_cur/addr_type:CompletePlaceName/addr_type:PlaceName">
																			<xsl:variable name="var43_filter" select="."/>
																			<xsl:if test="(./@PlaceNameType)[('MunicipalJurisdiction' = .)]">
																				<xsl:for-each select="$var24_cur/addr_type:StateName">
																					<xsl:variable name="var44_cur" select="."/>
																					<xsl:for-each select="$var24_cur/addr_type:ZipCode">
																						<xsl:variable name="var45_cur" select="."/>
																						<xsl:value-of select="'1'"/>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:if>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:for-each select="$var24_cur/addr_type:CompletePlaceName/addr_type:PlaceName">
																		<xsl:variable name="var46_filter" select="."/>
																		<xsl:if test="(./@PlaceNameType)[('MunicipalJurisdiction' = .)]">
																			<xsl:for-each select="$var24_cur/addr_type:StateName">
																				<xsl:variable name="var47_cur" select="."/>
																				<xsl:for-each select="$var24_cur/addr_type:ZipCode">
																					<xsl:variable name="var48_cur" select="."/>
																					<xsl:value-of select="'1'"/>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:if>
																	</xsl:for-each>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:otherwise>
													</xsl:choose>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:if test="boolean(translate(normalize-space($var22_nested), ' 0', ''))">
							<addr:GeneralAddress>
								<xsl:variable name="var49_nested">
									<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type">
										<xsl:variable name="var50_cur" select="."/>
										<xsl:value-of select="number(boolean(addr:GeneralAddress))"/>
									</xsl:for-each>
								</xsl:variable>
								<xsl:choose>
									<xsl:when test="boolean(translate(normalize-space($var49_nested), ' 0', ''))">
										<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr:GeneralAddress">
											<xsl:variable name="var51_cur" select="."/>
											<xsl:value-of select="."/>
										</xsl:for-each>
									</xsl:when>
									<xsl:otherwise>
										<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type">
											<xsl:variable name="var52_cur" select="."/>
											<xsl:for-each select="addr:CompleteStreetName/addr_type:StreetNamePreDirectional">
												<xsl:variable name="var53_cur" select="."/>
												<xsl:for-each select="$var52_cur/addr:CompleteStreetName/addr_type:StreetNamePostType">
													<xsl:variable name="var54_cur" select="."/>
													<xsl:for-each select="$var52_cur/addr:CompleteStreetName/addr_type:StreetNamePostDirectional">
														<xsl:variable name="var55_cur" select="."/>
														<xsl:variable name="var56_nested">
															<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement">
																<xsl:variable name="var57_cur" select="."/>
																<xsl:value-of select="number(boolean(addr_type:SubaddressType))"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="boolean(translate(normalize-space($var56_nested), ' 0', ''))">
																<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement/addr_type:SubaddressType">
																	<xsl:variable name="var58_cur" select="."/>
																	<xsl:variable name="var59_nested">
																		<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type">
																			<xsl:variable name="var60_cur" select="."/>
																			<xsl:value-of select="number(boolean(addr:CompleteSubaddress))"/>
																		</xsl:for-each>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="boolean(translate(normalize-space($var59_nested), ' 0', ''))">
																			<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement">
																				<xsl:variable name="var61_cur" select="."/>
																				<xsl:for-each select="$var52_cur/addr_type:CompletePlaceName/addr_type:PlaceName">
																					<xsl:variable name="var62_filter" select="."/>
																					<xsl:if test="(./@PlaceNameType)[('MunicipalJurisdiction' = .)]">
																						<xsl:for-each select="$var52_cur/addr_type:StateName">
																							<xsl:variable name="var63_cur" select="."/>
																							<xsl:for-each select="$var52_cur/addr_type:ZipCode">
																								<xsl:variable name="var64_cur" select="."/>
																								<xsl:value-of select="normalize-space(concat($var52_cur/addr:CompleteAddressNumber/addr_type:AddressNumber, ' ', $var53_cur, ' ', $var52_cur/addr:CompleteStreetName/addr_type:StreetName, ' ', $var54_cur, ' ', $var55_cur, ' ', $var58_cur, ' ', $var61_cur/addr_type:SubaddressIdentifier, ' ', $var62_filter, ' ', $var63_cur, ' ', .))"/>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:if>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:for-each select="$var52_cur/addr_type:CompletePlaceName/addr_type:PlaceName">
																				<xsl:variable name="var65_filter" select="."/>
																				<xsl:if test="(./@PlaceNameType)[('MunicipalJurisdiction' = .)]">
																					<xsl:for-each select="$var52_cur/addr_type:StateName">
																						<xsl:variable name="var66_cur" select="."/>
																						<xsl:for-each select="$var52_cur/addr_type:ZipCode">
																							<xsl:variable name="var67_cur" select="."/>
																							<xsl:value-of select="normalize-space(concat($var52_cur/addr:CompleteAddressNumber/addr_type:AddressNumber, ' ', $var53_cur, ' ', $var52_cur/addr:CompleteStreetName/addr_type:StreetName, ' ', $var54_cur, ' ', $var55_cur, ' ', $var58_cur, ' ', '', ' ', $var65_filter, ' ', $var66_cur, ' ', .))"/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:if>
																			</xsl:for-each>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<xsl:variable name="var68_nested">
																	<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type">
																		<xsl:variable name="var69_cur" select="."/>
																		<xsl:value-of select="number(boolean(addr:CompleteSubaddress))"/>
																	</xsl:for-each>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="boolean(translate(normalize-space($var68_nested), ' 0', ''))">
																		<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement">
																			<xsl:variable name="var70_cur" select="."/>
																			<xsl:for-each select="$var52_cur/addr_type:CompletePlaceName/addr_type:PlaceName">
																				<xsl:variable name="var71_filter" select="."/>
																				<xsl:if test="(./@PlaceNameType)[('MunicipalJurisdiction' = .)]">
																					<xsl:for-each select="$var52_cur/addr_type:StateName">
																						<xsl:variable name="var72_cur" select="."/>
																						<xsl:for-each select="$var52_cur/addr_type:ZipCode">
																							<xsl:variable name="var73_cur" select="."/>
																							<xsl:value-of select="normalize-space(concat($var52_cur/addr:CompleteAddressNumber/addr_type:AddressNumber, ' ', $var53_cur, ' ', $var52_cur/addr:CompleteStreetName/addr_type:StreetName, ' ', $var54_cur, ' ', $var55_cur, ' ', '', ' ', $var70_cur/addr_type:SubaddressIdentifier, ' ', $var71_filter, ' ', $var72_cur, ' ', .))"/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:if>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:for-each select="$var52_cur/addr_type:CompletePlaceName/addr_type:PlaceName">
																			<xsl:variable name="var74_filter" select="."/>
																			<xsl:if test="(./@PlaceNameType)[('MunicipalJurisdiction' = .)]">
																				<xsl:for-each select="$var52_cur/addr_type:StateName">
																					<xsl:variable name="var75_cur" select="."/>
																					<xsl:for-each select="$var52_cur/addr_type:ZipCode">
																						<xsl:variable name="var76_cur" select="."/>
																						<xsl:value-of select="normalize-space(concat($var52_cur/addr:CompleteAddressNumber/addr_type:AddressNumber, ' ', $var53_cur, ' ', $var52_cur/addr:CompleteStreetName/addr_type:StreetName, ' ', $var54_cur, ' ', $var55_cur, ' ', '', ' ', '', ' ', $var74_filter, ' ', $var75_cur, ' ', .))"/>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:if>
																		</xsl:for-each>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:otherwise>
								</xsl:choose>
							</addr:GeneralAddress>
						</xsl:if>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr:USPSGeneralDeliveryPoint">
							<xsl:variable name="var77_cur" select="."/>
							<addr:USPSGeneralDeliveryPoint>
								<xsl:value-of select="."/>
							</addr:USPSGeneralDeliveryPoint>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:CompletePlaceName">
							<xsl:variable name="var78_cur" select="."/>
							<addr_type:CompletePlaceName>
								<xsl:copy-of select="@node()"/>
								<xsl:copy-of select="node()"/>
							</addr_type:CompletePlaceName>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type/addr_type:StateName">
							<xsl:variable name="var79_cur" select="."/>
							<addr_type:StateName>
								<xsl:value-of select="."/>
							</addr_type:StateName>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type/addr_type:ZipCode">
							<xsl:variable name="var80_cur" select="."/>
							<addr_type:ZipCode>
								<xsl:value-of select="."/>
							</addr_type:ZipCode>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:NumberedThoroughfareAddress_type/addr_type:ZipPlus4">
							<xsl:variable name="var81_cur" select="."/>
							<addr_type:ZipPlus4>
								<xsl:value-of select="."/>
							</addr_type:ZipPlus4>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:CountryName">
							<xsl:variable name="var82_cur" select="."/>
							<addr_type:CountryName>
								<xsl:value-of select="."/>
							</addr_type:CountryName>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:PlaceStateZip">
							<xsl:variable name="var83_cur" select="."/>
							<addr_type:PlaceStateZip>
								<xsl:value-of select="."/>
							</addr_type:PlaceStateZip>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressId">
							<xsl:variable name="var84_cur" select="."/>
							<addr_type:AddressId>
								<xsl:value-of select="."/>
							</addr_type:AddressId>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressAuthority">
							<xsl:variable name="var85_cur" select="."/>
							<addr_type:AddressAuthority>
								<xsl:value-of select="."/>
							</addr_type:AddressAuthority>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:RelatedAddressId">
							<xsl:variable name="var86_cur" select="."/>
							<addr_type:RelatedAddressId>
								<xsl:value-of select="."/>
							</addr_type:RelatedAddressId>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressXCoordinate">
							<xsl:variable name="var87_cur" select="."/>
							<addr_type:AddressXCoordinate>
								<xsl:value-of select="number(.)"/>
							</addr_type:AddressXCoordinate>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressYCoordinate">
							<xsl:variable name="var88_cur" select="."/>
							<addr_type:AddressYCoordinate>
								<xsl:value-of select="number(.)"/>
							</addr_type:AddressYCoordinate>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressLongitude">
							<xsl:variable name="var89_cur" select="."/>
							<addr_type:AddressLongitude>
								<xsl:value-of select="number(.)"/>
							</addr_type:AddressLongitude>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressLatitude">
							<xsl:variable name="var90_cur" select="."/>
							<addr_type:AddressLatitude>
								<xsl:value-of select="number(.)"/>
							</addr_type:AddressLatitude>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:USNationalGridCoordinate">
							<xsl:variable name="var91_cur" select="."/>
							<addr_type:USNationalGridCoordinate>
								<xsl:value-of select="."/>
							</addr_type:USNationalGridCoordinate>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressElevation">
							<xsl:variable name="var92_cur" select="."/>
							<addr_type:AddressElevation>
								<xsl:value-of select="number(.)"/>
							</addr_type:AddressElevation>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressCoordinateReferenceSystem">
							<xsl:variable name="var93_cur" select="."/>
							<addr_type:AddressCoordinateReferenceSystem>
								<xsl:copy-of select="@node()"/>
								<xsl:copy-of select="node()"/>
							</addr_type:AddressCoordinateReferenceSystem>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressParcelIdentifierSource">
							<xsl:variable name="var94_cur" select="."/>
							<addr_type:AddressParcelIdentifierSource>
								<xsl:value-of select="."/>
							</addr_type:AddressParcelIdentifierSource>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressParcelIdentifier">
							<xsl:variable name="var95_cur" select="."/>
							<addr_type:AddressParcelIdentifier>
								<xsl:value-of select="."/>
							</addr_type:AddressParcelIdentifier>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressTransportationSystemName">
							<xsl:variable name="var96_cur" select="."/>
							<addr_type:AddressTransportationSystemName>
								<xsl:value-of select="."/>
							</addr_type:AddressTransportationSystemName>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressTransportationSystemAuthority">
							<xsl:variable name="var97_cur" select="."/>
							<addr_type:AddressTransportationSystemAuthority>
								<xsl:value-of select="."/>
							</addr_type:AddressTransportationSystemAuthority>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressTransportationFeatureType">
							<xsl:variable name="var98_cur" select="."/>
							<addr_type:AddressTransportationFeatureType>
								<xsl:value-of select="."/>
							</addr_type:AddressTransportationFeatureType>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressTransportationFeatureID">
							<xsl:variable name="var99_cur" select="."/>
							<addr_type:AddressTransportationFeatureID>
								<xsl:value-of select="."/>
							</addr_type:AddressTransportationFeatureID>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:RelatedTransportationFeatureID">
							<xsl:variable name="var100_cur" select="."/>
							<addr_type:RelatedTransportationFeatureID>
								<xsl:value-of select="."/>
							</addr_type:RelatedTransportationFeatureID>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressRangeType">
							<xsl:variable name="var101_cur" select="."/>
							<addr_type:AddressRangeType>
								<xsl:value-of select="."/>
							</addr_type:AddressRangeType>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressRangeParity">
							<xsl:variable name="var102_cur" select="."/>
							<addr_type:AddressRangeParity>
								<xsl:value-of select="."/>
							</addr_type:AddressRangeParity>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressRangeDirectionality">
							<xsl:variable name="var103_cur" select="."/>
							<addr_type:AddressRangeDirectionality>
								<xsl:value-of select="."/>
							</addr_type:AddressRangeDirectionality>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressRangeSpan">
							<xsl:variable name="var104_cur" select="."/>
							<addr_type:AddressRangeSpan>
								<xsl:value-of select="."/>
							</addr_type:AddressRangeSpan>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressClassification">
							<xsl:variable name="var105_cur" select="."/>
							<addr_type:AddressClassification>
								<xsl:value-of select="."/>
							</addr_type:AddressClassification>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressFeatureType">
							<xsl:variable name="var106_cur" select="."/>
							<addr_type:AddressFeatureType>
								<xsl:value-of select="."/>
							</addr_type:AddressFeatureType>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressLifecycleStatus">
							<xsl:variable name="var107_cur" select="."/>
							<addr_type:AddressLifecycleStatus>
								<xsl:value-of select="."/>
							</addr_type:AddressLifecycleStatus>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:OfficialStatus">
							<xsl:variable name="var108_cur" select="."/>
							<addr_type:OfficialStatus>
								<xsl:value-of select="."/>
							</addr_type:OfficialStatus>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressAnomalyStatus">
							<xsl:variable name="var109_cur" select="."/>
							<addr_type:AddressAnomalyStatus>
								<xsl:value-of select="."/>
							</addr_type:AddressAnomalyStatus>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressSideOfStreet">
							<xsl:variable name="var110_cur" select="."/>
							<addr_type:AddressSideOfStreet>
								<xsl:value-of select="."/>
							</addr_type:AddressSideOfStreet>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressZLevel">
							<xsl:variable name="var111_cur" select="."/>
							<addr_type:AddressZLevel>
								<xsl:value-of select="."/>
							</addr_type:AddressZLevel>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:LocationDescription">
							<xsl:variable name="var112_cur" select="."/>
							<addr_type:LocationDescription>
								<xsl:value-of select="."/>
							</addr_type:LocationDescription>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:MailableAddress">
							<xsl:variable name="var113_cur" select="."/>
							<addr_type:MailableAddress>
								<xsl:value-of select="."/>
							</addr_type:MailableAddress>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressStartDate">
							<xsl:variable name="var114_cur" select="."/>
							<addr_type:AddressStartDate>
								<xsl:value-of select="."/>
							</addr_type:AddressStartDate>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressEndDate">
							<xsl:variable name="var115_cur" select="."/>
							<addr_type:AddressEndDate>
								<xsl:value-of select="."/>
							</addr_type:AddressEndDate>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:DataSetID">
							<xsl:variable name="var116_cur" select="."/>
							<addr_type:DataSetID>
								<xsl:value-of select="."/>
							</addr_type:DataSetID>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressReferenceSystemId">
							<xsl:variable name="var117_cur" select="."/>
							<addr_type:AddressReferenceSystemId>
								<xsl:value-of select="number(.)"/>
							</addr_type:AddressReferenceSystemId>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:MailingAddress/ns0:GeneralAddressClass_type/addr_type:AddressReferenceSystemAuthority">
							<xsl:variable name="var118_cur" select="."/>
							<addr_type:AddressReferenceSystemAuthority>
								<xsl:value-of select="."/>
							</addr_type:AddressReferenceSystemAuthority>
						</xsl:for-each>
					</GeneralAddressClass_type>
				</MailingAddress>
				<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:OtherRegistrationForm">
					<xsl:variable name="var119_cur" select="."/>
					<OtherRegistrationForm>
						<xsl:value-of select="."/>
					</OtherRegistrationForm>
				</xsl:for-each>
				<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:OtherRegistrationMethod">
					<xsl:variable name="var120_cur" select="."/>
					<OtherRegistrationMethod>
						<xsl:value-of select="."/>
					</OtherRegistrationMethod>
				</xsl:for-each>
				<PreviousName>
					<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:PreviousName">
						<xsl:variable name="var121_cur" select="."/>
						<xsl:for-each select="ns0:FirstName">
							<xsl:variable name="var122_cur" select="."/>
							<xsl:for-each select="$var121_cur/ns0:MiddleName">
								<xsl:variable name="var123_cur" select="."/>
								<xsl:for-each select="$var121_cur/ns0:LastName">
									<xsl:variable name="var124_cur" select="."/>
									<xsl:for-each select="$var121_cur/ns0:Suffix">
										<xsl:variable name="var125_cur" select="."/>
										<FullName>
											<xsl:value-of select="normalize-space(concat($var122_cur, $var123_cur, $var124_cur, .))"/>
										</FullName>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:for-each>
				</PreviousName>
				<PreviousRegistrationAddress>
					<GeneralAddressClass_type>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:PreviousRegistrationAddress/ns0:NumberedThoroughfareAddress_type">
							<xsl:variable name="var126_cur" select="."/>
							<xsl:for-each select="addr:CompleteStreetName/addr_type:StreetNamePreDirectional">
								<xsl:variable name="var127_cur" select="."/>
								<xsl:for-each select="$var126_cur/addr:CompleteStreetName/addr_type:StreetNamePostType">
									<xsl:variable name="var128_cur" select="."/>
									<xsl:for-each select="$var126_cur/addr:CompleteStreetName/addr_type:StreetNamePostDirectional">
										<xsl:variable name="var129_cur" select="."/>
										<xsl:variable name="var130_nested">
											<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:PreviousRegistrationAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement">
												<xsl:variable name="var131_cur" select="."/>
												<xsl:value-of select="number(boolean(addr_type:SubaddressType))"/>
											</xsl:for-each>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="boolean(translate(normalize-space($var130_nested), ' 0', ''))">
												<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:PreviousRegistrationAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement/addr_type:SubaddressType">
													<xsl:variable name="var132_cur" select="."/>
													<xsl:variable name="var133_nested">
														<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:PreviousRegistrationAddress/ns0:NumberedThoroughfareAddress_type">
															<xsl:variable name="var134_cur" select="."/>
															<xsl:value-of select="number(boolean(addr:CompleteSubaddress))"/>
														</xsl:for-each>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="boolean(translate(normalize-space($var133_nested), ' 0', ''))">
															<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:PreviousRegistrationAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement">
																<xsl:variable name="var135_cur" select="."/>
																<addr:USPSGeneralDeliveryPoint>
																	<xsl:value-of select="normalize-space(concat($var126_cur/addr:CompleteAddressNumber/addr_type:AddressNumber, ' ', $var127_cur, ' ', $var126_cur/addr:CompleteStreetName/addr_type:StreetName, ' ', $var128_cur, ' ', $var129_cur, ' ', $var132_cur, ' ', addr_type:SubaddressIdentifier))"/>
																</addr:USPSGeneralDeliveryPoint>
															</xsl:for-each>
														</xsl:when>
														<xsl:otherwise>
															<addr:USPSGeneralDeliveryPoint>
																<xsl:value-of select="normalize-space(concat($var126_cur/addr:CompleteAddressNumber/addr_type:AddressNumber, ' ', $var127_cur, ' ', $var126_cur/addr:CompleteStreetName/addr_type:StreetName, ' ', $var128_cur, ' ', $var129_cur, ' ', ., ' ', ''))"/>
															</addr:USPSGeneralDeliveryPoint>
														</xsl:otherwise>
													</xsl:choose>
												</xsl:for-each>
											</xsl:when>
											<xsl:otherwise>
												<xsl:variable name="var136_nested">
													<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:PreviousRegistrationAddress/ns0:NumberedThoroughfareAddress_type">
														<xsl:variable name="var137_cur" select="."/>
														<xsl:value-of select="number(boolean(addr:CompleteSubaddress))"/>
													</xsl:for-each>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="boolean(translate(normalize-space($var136_nested), ' 0', ''))">
														<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:PreviousRegistrationAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement">
															<xsl:variable name="var138_cur" select="."/>
															<addr:USPSGeneralDeliveryPoint>
																<xsl:value-of select="normalize-space(concat($var126_cur/addr:CompleteAddressNumber/addr_type:AddressNumber, ' ', $var127_cur, ' ', $var126_cur/addr:CompleteStreetName/addr_type:StreetName, ' ', $var128_cur, ' ', $var129_cur, ' ', '', ' ', addr_type:SubaddressIdentifier))"/>
															</addr:USPSGeneralDeliveryPoint>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<addr:USPSGeneralDeliveryPoint>
															<xsl:value-of select="normalize-space(concat($var126_cur/addr:CompleteAddressNumber/addr_type:AddressNumber, ' ', $var127_cur, ' ', $var126_cur/addr:CompleteStreetName/addr_type:StreetName, ' ', $var128_cur, ' ', ., ' ', '', ' ', ''))"/>
														</addr:USPSGeneralDeliveryPoint>
													</xsl:otherwise>
												</xsl:choose>
											</xsl:otherwise>
										</xsl:choose>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:PreviousRegistrationAddress/ns0:NumberedThoroughfareAddress_type/addr_type:CompletePlaceName">
							<xsl:variable name="var139_cur" select="."/>
							<addr_type:CompletePlaceName>
								<xsl:copy-of select="@node()"/>
								<xsl:copy-of select="node()"/>
							</addr_type:CompletePlaceName>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:PreviousRegistrationAddress/ns0:NumberedThoroughfareAddress_type/addr_type:StateName">
							<xsl:variable name="var140_cur" select="."/>
							<addr_type:StateName>
								<xsl:value-of select="."/>
							</addr_type:StateName>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:PreviousRegistrationAddress/ns0:NumberedThoroughfareAddress_type/addr_type:ZipCode">
							<xsl:variable name="var141_cur" select="."/>
							<addr_type:ZipCode>
								<xsl:value-of select="."/>
							</addr_type:ZipCode>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:PreviousRegistrationAddress/ns0:NumberedThoroughfareAddress_type/addr_type:ZipPlus4">
							<xsl:variable name="var142_cur" select="."/>
							<addr_type:ZipPlus4>
								<xsl:value-of select="."/>
							</addr_type:ZipPlus4>
						</xsl:for-each>
					</GeneralAddressClass_type>
				</PreviousRegistrationAddress>
				<RegistrationAddress>
					<GeneralAddressClass_type>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:RegistrationAddress/ns0:NumberedThoroughfareAddress_type">
							<xsl:variable name="var143_cur" select="."/>
							<xsl:for-each select="addr:CompleteStreetName/addr_type:StreetNamePreDirectional">
								<xsl:variable name="var144_cur" select="."/>
								<xsl:for-each select="$var143_cur/addr:CompleteStreetName/addr_type:StreetNamePostType">
									<xsl:variable name="var145_cur" select="."/>
									<xsl:for-each select="$var143_cur/addr:CompleteStreetName/addr_type:StreetNamePostDirectional">
										<xsl:variable name="var146_cur" select="."/>
										<xsl:variable name="var147_nested">
											<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:RegistrationAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement">
												<xsl:variable name="var148_cur" select="."/>
												<xsl:value-of select="number(boolean(addr_type:SubaddressType))"/>
											</xsl:for-each>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="boolean(translate(normalize-space($var147_nested), ' 0', ''))">
												<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:RegistrationAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement/addr_type:SubaddressType">
													<xsl:variable name="var149_cur" select="."/>
													<xsl:variable name="var150_nested">
														<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:RegistrationAddress/ns0:NumberedThoroughfareAddress_type">
															<xsl:variable name="var151_cur" select="."/>
															<xsl:value-of select="number(boolean(addr:CompleteSubaddress))"/>
														</xsl:for-each>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="boolean(translate(normalize-space($var150_nested), ' 0', ''))">
															<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:RegistrationAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement">
																<xsl:variable name="var152_cur" select="."/>
																<addr:USPSGeneralDeliveryPoint>
																	<xsl:value-of select="normalize-space(concat($var143_cur/addr:CompleteAddressNumber/addr_type:AddressNumber, ' ', $var144_cur, ' ', $var143_cur/addr:CompleteStreetName/addr_type:StreetName, ' ', $var145_cur, ' ', $var146_cur, ' ', $var149_cur, ' ', addr_type:SubaddressIdentifier))"/>
																</addr:USPSGeneralDeliveryPoint>
															</xsl:for-each>
														</xsl:when>
														<xsl:otherwise>
															<addr:USPSGeneralDeliveryPoint>
																<xsl:value-of select="normalize-space(concat($var143_cur/addr:CompleteAddressNumber/addr_type:AddressNumber, ' ', $var144_cur, ' ', $var143_cur/addr:CompleteStreetName/addr_type:StreetName, ' ', $var145_cur, ' ', $var146_cur, ' ', ., ' ', ' '))"/>
															</addr:USPSGeneralDeliveryPoint>
														</xsl:otherwise>
													</xsl:choose>
												</xsl:for-each>
											</xsl:when>
											<xsl:otherwise>
												<xsl:variable name="var153_nested">
													<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:RegistrationAddress/ns0:NumberedThoroughfareAddress_type">
														<xsl:variable name="var154_cur" select="."/>
														<xsl:value-of select="number(boolean(addr:CompleteSubaddress))"/>
													</xsl:for-each>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="boolean(translate(normalize-space($var153_nested), ' 0', ''))">
														<xsl:for-each select="$var1_initial/ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:RegistrationAddress/ns0:NumberedThoroughfareAddress_type/addr:CompleteSubaddress/addr_type:SubaddressElement">
															<xsl:variable name="var155_cur" select="."/>
															<addr:USPSGeneralDeliveryPoint>
																<xsl:value-of select="normalize-space(concat($var143_cur/addr:CompleteAddressNumber/addr_type:AddressNumber, ' ', $var144_cur, ' ', $var143_cur/addr:CompleteStreetName/addr_type:StreetName, ' ', $var145_cur, ' ', $var146_cur, ' ', ' ', ' ', addr_type:SubaddressIdentifier))"/>
															</addr:USPSGeneralDeliveryPoint>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<addr:USPSGeneralDeliveryPoint>
															<xsl:value-of select="normalize-space(concat($var143_cur/addr:CompleteAddressNumber/addr_type:AddressNumber, ' ', $var144_cur, ' ', $var143_cur/addr:CompleteStreetName/addr_type:StreetName, ' ', $var145_cur, ' ', ., ' ', ' ', ' ', ' '))"/>
														</addr:USPSGeneralDeliveryPoint>
													</xsl:otherwise>
												</xsl:choose>
											</xsl:otherwise>
										</xsl:choose>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:RegistrationAddress/ns0:NumberedThoroughfareAddress_type/addr_type:CompletePlaceName">
							<xsl:variable name="var156_cur" select="."/>
							<addr_type:CompletePlaceName>
								<xsl:copy-of select="@node()"/>
								<xsl:copy-of select="node()"/>
							</addr_type:CompletePlaceName>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:RegistrationAddress/ns0:NumberedThoroughfareAddress_type/addr_type:StateName">
							<xsl:variable name="var157_cur" select="."/>
							<addr_type:StateName>
								<xsl:value-of select="."/>
							</addr_type:StateName>
						</xsl:for-each>
						<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:RegistrationAddress/ns0:NumberedThoroughfareAddress_type/addr_type:ZipCode">
							<xsl:variable name="var158_cur" select="."/>
							<addr_type:ZipCode>
								<xsl:value-of select="."/>
							</addr_type:ZipCode>
						</xsl:for-each>
					</GeneralAddressClass_type>
				</RegistrationAddress>
				<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VoterRegistration/ns0:RegistrationForm">
					<xsl:variable name="var159_cur" select="."/>
					<RegistrationForm>
						<xsl:value-of select="."/>
					</RegistrationForm>
				</xsl:for-each>
				<xsl:for-each select="ns0:VoterRecordsRequest">
					<xsl:variable name="var160_cur" select="."/>
					<RegistrationMethod>
						<xsl:value-of select="ns0:VoterRegistration/ns0:RegistrationMethod"/>
					</RegistrationMethod>
				</xsl:for-each>
			</VoterRegistration>
			<xsl:for-each select="ns0:VoterRecordsRequest">
				<xsl:variable name="var161_cur" select="."/>
				<GeneratedDate>
					<xsl:value-of select="ns0:GeneratedDate"/>
				</GeneratedDate>
			</xsl:for-each>
			<xsl:for-each select="ns0:VoterRecordsRequest/ns0:Issuer">
				<xsl:variable name="var162_cur" select="."/>
				<Issuer>
					<xsl:value-of select="."/>
				</Issuer>
			</xsl:for-each>
			<xsl:for-each select="ns0:VoterRecordsRequest/ns0:OtherType">
				<xsl:variable name="var163_cur" select="."/>
				<OtherType>
					<xsl:value-of select="."/>
				</OtherType>
			</xsl:for-each>
			<xsl:for-each select="ns0:VoterRecordsRequest/ns0:TransactionId">
				<xsl:variable name="var164_cur" select="."/>
				<TransactionId>
					<xsl:value-of select="."/>
				</TransactionId>
			</xsl:for-each>
			<xsl:for-each select="ns0:VoterRecordsRequest/ns0:Type">
				<xsl:variable name="var165_cur" select="."/>
				<Type>
					<xsl:value-of select="."/>
				</Type>
			</xsl:for-each>
			<xsl:for-each select="ns0:VoterRecordsRequest/ns0:VendorApplicationId">
				<xsl:variable name="var166_cur" select="."/>
				<VendorApplicationId>
					<xsl:value-of select="."/>
				</VendorApplicationId>
			</xsl:for-each>
		</VoterRecordsRequest>
	</xsl:template>
</xsl:stylesheet>
